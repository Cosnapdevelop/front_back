generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(cuid())
  email         String         @unique
  username      String         @unique
  passwordHash  String
  avatar        String?
  createdAt     DateTime       @default(now())
  refreshTokens RefreshToken[]
  posts         Post[]
  comments      Comment[]
  postLikes     PostLike[]
}

model RefreshToken {
  id         String   @id @default(cuid())
  token      String   @unique
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  isRevoked  Boolean  @default(false)
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  @@index([userId])
}

model Post {
  id         String    @id @default(cuid())
  userId     String
  user       User      @relation(fields: [userId], references: [id])
  effectId   String?
  images     String[]
  caption    String
  likesCount Int       @default(0)
  comments   Comment[]
  likes      PostLike[]
  createdAt  DateTime  @default(now())

  @@index([userId])
}

model Comment {
  id        String   @id @default(cuid())
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  content   String
  parentId  String? 
  parent    Comment? @relation("CommentToReplies", fields: [parentId], references: [id])
  replies   Comment[] @relation("CommentToReplies")
  createdAt DateTime @default(now())

  @@index([postId])
  @@index([userId])
  @@index([parentId])
}

model PostLike {
  id        String   @id @default(cuid())
  postId    String
  userId    String
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())

  @@unique([postId, userId])
  @@index([postId])
  @@index([userId])
}


